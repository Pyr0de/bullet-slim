# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Configure dependencies (Linux x64)
      run: |
        sudo apt -y install build-essential cmake libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev
        git submodule update --init --recursive

    - name: Configure CMake (Linux x64)
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        mkdir build
        cmake -S . -B build -Wno-dev

    - name: Build (Linux x64)
      # Build your program with the given configuration
      run: |
        cd build
        make

    - name: Upload (Linux x64)
      uses: actions/upload-artifact@v4
      with:
          name: "ubuntu-latest-x64"
          path: build/platformer-sdl
          if-no-files-found: ignore
          
    - name: Configure dependencies (Linux aarch64)
      run: |
        sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        sudo dpkg --add-architecture arm64
        echo "deb [arch=amd64] http://de2.archive.ubuntu.com/ubuntu/ bionic main restricted\ndeb-src [arch=amd64] http://de.archive.ubuntu.com/ubuntu/ bionic main restricted" | sudo tee -a /etc/apt/sources.list
        sudo apt update
        sudo apt -y install build-essential:arm64 cmake:arm64 libsdl2-dev:arm64 libsdl2-image-dev:arm64 libsdl2-ttf-dev:arm64
        
    - name: Configure CMake (Linux aarch64)
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -S . -B build -DCMAKE_C_COMPILER="aarch64-linux-gnu-gcc" -DCMAKE_CXX_COMPILER="aarch64-linux-gnu-g++" -Wno-dev

    - name: Build (Linux aarch64)
      # Build your program with the given configuration
      run: |
        cd build
        make

    - name: Upload (Linux aarch64)
      uses: actions/upload-artifact@v4
      with:
          name: "ubuntu-latest-aarch64"
          path: build/platformer-sdl
          if-no-files-found: ignore

